#- Demo
require(rtweet)
require(tidytext)
require(dplyr)
require(tidyr)
require(stopwords)
require(qdapRegex)
require(wordcloud2)
require(ggplot2)
library(shiny); source('scripts/global.R')
source('scripts/global.R')
require(rtweet)
require(tidytext)
require(dplyr)
require(tidyr)
require(stopwords)
require(qdapRegex)
require(wordcloud2)
require(ggplot2)
#- API Twitter Connection
api_key <- "z46dsBLPPgCPueBGAYYdy2GRO"
api_secret <- "79pJneOL2TiSMg21FygLuCKGVEqmrVxzQRwkoVbOZgae1fyOfb"
access_token <- "4426540941-dbHY0iC6tWR0BzyLjvjschi4sESjEJKuXC4Cb00"
access_secret <- "KvLgOFeUYMGNaV4VGyT80Zz2iDJ95CykPsg3Lv3loG0f7"
create_token(app = "mytwitterapp",api_key, api_secret, access_token, access_secret)
busca <- search_tweets2(q = "bolsonaro",
n = 100,
lang = "pt")
busca
#- Function to clean texts
clean_text <- function(texto)
{
texto <- texto %>%
rm_url() %>%
gsub("[[:punct:][:blank:]]+", " ", .) %>%
gsub("\n", " ", .) %>%
iconv(.,from="UTF-8", to="ASCII//TRANSLIT") %>%
tolower()
return(texto)
}
clean_text
busca <- busca %>%
mutate(text_limpo = clean_text(text)) %>%
select(screen_name, text, text_limpo, status_id, created_at)
busca
require(twitteR)
require(tidyr)
require(tidytext)
require(magrittr)
require(purrr)
require(qdapRegex)
require(shiny)
require(shinydashboard)
require(shinydashboardPlus)
require(shinyWidgets)
require(stopwords)
require(wordcloud2)
require(radarchart)
require(shinycssloaders)
#- API Twitter Conection
api_key <- "z46dsBLPPgCPueBGAYYdy2GRO"
api_secret <- "79pJneOL2TiSMg21FygLuCKGVEqmrVxzQRwkoVbOZgae1fyOfb"
access_token <- "4426540941-dbHY0iC6tWR0BzyLjvjschi4sESjEJKuXC4Cb00"
access_secret <- "KvLgOFeUYMGNaV4VGyT80Zz2iDJ95CykPsg3Lv3loG0f7"
create_token(app = "mytwitterapp",api_key, api_secret, access_token, access_secret)
#- Load functions
source("functions/functions.R")
#- Log_Pesquisa
log_pesquisa <- read.csv("App/log_pesquisa.csv", sep= ";")
db <- data.frame(screenName = c(0,0,0,0),
text = c(0,0,0,0),
text_limpo = c(0,0,0,0),
id = c(0,0,0,0),
date = c(0,0,0,0),
latitude = c(0,0,0,0),
longitude = c(0,0,0,0))
#- Data Sentimental Analysis
palavras_pt <- readRDS("data/Portugues.rds")
palavras_es <- readRDS("data/Espanhol.rds")
palavras_en <- readRDS("data/Ingles.rds")
#- Run App
runApp("App")
require(twitteR)
require(tidyr)
require(tidytext)
require(magrittr)
require(purrr)
require(qdapRegex)
require(shiny)
require(shinydashboard)
require(shinydashboardPlus)
require(shinyWidgets)
require(stopwords)
require(wordcloud2)
require(radarchart)
require(shinycssloaders)
log_pesquisa
input <- list()
input$n=50
input <- list()
input$text="lula"
input$lang="pt"
input$n=50
db <<- search_tweets2(
termo = input$text,
idioma = input$lang,
num = input$n)
db <<- search_tweets2(
termo = input$text,
idioma = input$lang,
num = input$n)
db <<- search_tweets2(
q = input$text,
lang = input$lang,
n = input$n)
db
dt_informacoes_novas <- data.frame(termo = input$text,
idioma = input$lang,
num = input$n)
dt_informacoes_velhas <- read.csv("log_pesquisa.csv",
sep = ";")
dt_informacoes_velhas <- read.csv("App/log_pesquisa.csv",
sep = ";")
dt_informacoes_velhas
dt_informacoes <- bind_rows(dt_informacoes_velhas, dt_informacoes_novas)
dt_informacoes
dt_informacoes_novas
dt_informacoes_velhas
dt_informacoes <- bind_rows(dt_informacoes_novas,dt_informacoes_velhas)
dt_informacoes
write.table(dt_informacoes,
file = "App/log_pesquisa.csv",
sep=";",
row.names = FALSE)
p <- pesquisa()
p<-db
db
source('scripts/global.R')
source('scripts/global.R')
library(shiny); source('scripts/global.R')
